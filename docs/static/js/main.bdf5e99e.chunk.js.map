{"version":3,"sources":["firebase/firebase-config.js","types/types.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","REACT_APP_DATABASEURL","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","console","log","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PublicRoute","NotesAppBar","active","style","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bdf5e99e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASEURL,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID,\r\n};\r\n\r\n/* \r\nconst firebaseConfigTesting = {\r\n    apiKey: \"AIzaSyC7H-4y3PskCxIW9bnCzxhLgIszwedwsv8\",\r\n    authDomain: \"redux-demo-ab387.firebaseapp.com\",\r\n    databaseURL: \"https://redux-demo-ab387.firebaseio.com\",\r\n    projectId: \"redux-demo-ab387\",\r\n    storageBucket: \"redux-demo-ab387.appspot.com\",\r\n    messagingSenderId: \"738918522614\",\r\n    appId: \"1:738918522614:web:b79586f7983560125856d7\",\r\n    measurementId: \"G-S2R4YJJPQL\"\r\n  };\r\n\r\nif(process.env.NODE_ENV === 'test'){\r\n    //testing\r\n    firebase.initializeApp(firebaseConfigTesting);\r\n} else {\r\n    //dev/prod\r\n    firebase.initializeApp(firebaseConfig);\r\n} */\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n    \r\n\r\n} ","\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/adandev/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file);\r\n    \r\n    try{\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if(resp.ok){\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    } catch(err){\r\n        throw err;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","import Swal from 'sweetalert2';\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async(dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid} = getState().auth;\r\n\r\n        if(!note.url){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {active:activeNote} = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) => {\r\n    return async(dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type : types.notesLogoutCleaning\r\n});","import { types } from '../types/types';\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading  = () => ({\r\n    type: types.uiFinishLoading\r\n});","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { noteLogout } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        \r\n        dispatch(startLoading());\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user}) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n        \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async({user}) => {\r\n                \r\n                await user.updateProfile({displayName: name});\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                );\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {loading} = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: 'adan.risueño@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }    \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={handleLogin}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                \r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: 'Adan',\r\n        email: 'adan.risueño@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if(name.trim().length === 0){\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        } else if(!validator.isEmail(email)){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if(password !== password2 || password.length < 5){\r\n            dispatch(setError('Password should be at least 6 characters and match'));\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError());\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n                \r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                \r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact \r\n                        path=\"/auth/login\" \r\n                        component={LoginScreen} \r\n                    />\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={RegisterScreen} \r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\"/>\r\n                \r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route {... rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/auth/login\" />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {... rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                    ? (<Redirect to=\"/\" />)\r\n                    : (<Component {...props} />)\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n//react-journal\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n            \r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleSave}\r\n                > \r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\nimport { NotesAppBar } from './NotesAppBar';\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {active:note} = useSelector(state => state.notes);\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const {title, body, id} = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n\r\n       dispatch(activeNote(formValues.id, {...formValues}));\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    && (\r\n                        <div className=\"notes__image\">\r\n                            <img \r\n                                src={note.url}\r\n                                alt=\"imagen\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, date, title, body, url}) => {\r\n    \r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(\r\n            activeNote(id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n    }\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={handleEntryClick}\r\n        >\r\n            \r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`,      \r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                   {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n            <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const { notes } = useSelector(state => state.notes);\r\n    \r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={note.id}\r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n                \r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div \r\n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    (active)\r\n                    ? (<NoteScreen />)\r\n                    : (<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n\r\n            if(user?.uid) {\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n            \r\n            setChecking(false);\r\n\r\n        });\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if(checking) {\r\n        return(\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\" \r\n                        component={AuthRouter} \r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n                    <PrivateRoute \r\n                        exact  \r\n                        path=\"/\"\r\n                        component={JournalScreen}\r\n                        isAuthenticated={isLoggedIn} \r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\"/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n         \r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [action.payload, ...state.notes]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        \r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        \r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n    \r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from '../types/types';\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}